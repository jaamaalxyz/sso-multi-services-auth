events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    access_log /usr/local/var/log/nginx/access.log;
    error_log /usr/local/var/log/nginx/error.log;
    
    # Basic settings
    sendfile on;
    keepalive_timeout 65;
    
    # Upstream definitions for our services
    upstream service_a {
        server 127.0.0.1:3000;
        keepalive 32;
    }
    
    upstream service_b {
        server 127.0.0.1:3001;
        keepalive 32;
    }
    
    upstream service_c {
        server 127.0.0.1:3002;
        keepalive 32;
    }
    
    # Main server configuration
    server {
        listen 80;
        server_name local.a.com;
        
        # Service A - Main service (handles auth)
        location / {
            proxy_pass http://service_a;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Service B routes
        location /b/ {
            rewrite ^/b/(.*)$ /$1 break;
            proxy_pass http://service_b;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Service C routes
        location /c/ {
            rewrite ^/c/(.*)$ /$1 break;
            proxy_pass http://service_c;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
